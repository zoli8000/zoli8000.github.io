import{createJSONEditor as Me}from"https://cdn.jsdelivr.net/npm/vanilla-jsoneditor@latest/+esm";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const i of n.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();var m=(a=>(a[a.scopeString=0]="scopeString",a[a.scopeCommand=1]="scopeCommand",a[a.scopeRem=2]="scopeRem",a[a.scopeArgs=3]="scopeArgs",a))(m||{});class ${static encodeTextAsBytes(e){return[0]}static voidEncoder(e){return[]}static encodeTokens(e,t){return[]}}class w{static screenCodeToChar(e,t=!1){return t?[`@ABCDEFGHIJKLMNOPQRSTUVWXYZ[£]↑← !"#$%&'()*+,-./0123456789:;<=>?━♠│─▔▔▁▍▕╮╰╯└╲╱┌┐●▁♥▏╭╳○♣▕♦➕⡇|.. ▌▄‾▁▎▒▕⣤.▕┣▗┗┓▂┏┻┳┫▎▍▐‾▀▃.▖▝┛▘▚`[e&127],(e&128)>0]:[`@abcdefghijklmnopqrstuvwxyz[£]↑← !"#$%&'()*+,-./0123456789:;<=>?━ABCDEFGHIJKLMNOPQRSTUVWXYZ➕⡇|π◥ ▌▄‾▁▎▒▕⣤◤▕┣▗┗┓▂┏┻┳┫▎▍▐‾▀▃⅃▖▝┛▘▚`[e&127],(e&128)>0]}static petsciiCodeToScreen(e){let t=0;return e<32?t=e+128:32<=e&&e<64?t=e:64<=e&&e<96?t=e-64:96<=e&&e<128?t=e-32:128<=e&&e<160?t=e+64:160<=e&&e<192?t=e-64:192<=e&&e<224||224<=e&&e<255?t=e-128:e==255&&(t=94),t}static textToPetscii(e){let t=e.charCodeAt(0);return(65<=t&&t<=90||97<=t&&t<=122)&&(t^=32),t}static textToScreen(e){const t=w.textToPetscii(e);return w.petsciiCodeToScreen(t)}static petsciiCodeToChar(e,t=!1){return w.screenCodeToChar(w.petsciiCodeToScreen(e),t)}static screenCodeToEscaped(e,t=!1){if(t)throw Error("Small character conversion not implemented!");return e==64||e>=91?["code",e]:["chr",`@abcdefghijklmnopqrstuvwxyz[£]↑← !"#$%&'()*+,-./0123456789:;<=>?━ABCDEFGHIJKLMNOPQRSTUVWXYZ`[e]]}static petsciiCodeToEscaped(e,t=!1){const r=w.petsciiCodeToScreen(e),s=w.screenCodeToEscaped(r,t);return s[0]=="code"&&(s[1]=e),s}static petsciiCodeToSafe(e,t=!1){const[r,s]=w.petsciiCodeToEscaped(e,t);return r=="chr"?s:"?"}}const Z={locate:[128,130],read:[129,128],break:[130,192],call:[131,128],def:[132,160],endif:[133,192],for:[134,160],goto:[135,129],local:[136,128],if:[137,176],fend:[138,192],clr:[139,128],let:[140,128],memset:[141,130],next:[142,192],on:[143,128],poke:[144,129],continue:[145,192],repeat:[146,160],set:[147,128],then:[148,192],until:[149,129],voice:[150,136],while:[151,129],exec:[152,129],input:[153,129],sys:[154,128],CHAR:[160,0],F08:[161,24],DQUOTE:[162,2],WORD:[163,21],UWORD:[164,17],F2416:[165,30],BYTE:[166,16],SQUOTE:[167,2],F88:[168,29],FLOAT:[169,31],DCHAR:[170,1],inc:[171,128],QQUOTE:[172,2],dec:[173,128],_label:[174,128],rem:[175,128],"+":[176,34],"-":[177,34],"*":[178,35],AND:[179,32],"&&":[179,32],div:[180,35],"/":[180,35],OR:[181,32],"||":[181,32],mod:[182,35],"%":[182,35],xor:[183,36],"^":[183,36],and:[184,36],"&":[184,36],or:[185,36],"|":[185,36],"<":[186,33],"==":[187,33],"=":[187,33],">=":[188,33],"!=":[189,33],"<>":[189,33],"<=":[190,33],">":[191,33],print:[192,128],data:[193,128],bitmap:[194,136],fcall:[195,128],dend:[196,192],else:[197,144],fast:[198,160],gosub:[199,129],elif:[200,144],dim:[201,160],open:[202,128],color:[203,130],loop:[204,192],memcopy:[205,130],end:[206,192],do:[207,224],dpoke:[208,129],close:[209,129],return:[210,129],sprite:[211,136],timer:[212,128],get:[213,128],font:[214,136],wait:[215,130],inkey:[217,128],settings:[218,128],to:[220,64],pi:[222,64],right:[223,98],_lf:[224,192],cos:[225,97],int:[226,97],tan:[227,97],addr:[228,64],sgn:[229,97],limit:[230,98],mid:[231,98],step:[232,64],fpi:[233,64],atn:[234,97],frac:[235,97],dpeek:[236,98],spc:[237,97],sin:[238,97],peek:[239,98],abs:[240,97],left:[241,98],rnd:[242,98],when:[243,98],has:[244,98],tab:[245,97],len:[246,97],time:[247,64],sub:[248,96],ord:[249,97],_sh_lf:[250,0],fn:[251,64],chr:[252,97],find:[253,96],val:[254,97],between:[255,98]},Ne={128:["locate",130],129:["read",128],130:["break",192],131:["call",128],132:["def",160],133:["endif",192],134:["for",160],135:["goto",129],136:["local",128],137:["if",176],138:["fend",192],139:["clr",128],140:["let",128],141:["memset",130],142:["next",192],143:["on",128],144:["poke",129],145:["continue",192],146:["repeat",160],147:["set",128],148:["then",192],149:["until",129],150:["voice",136],151:["while",129],152:["exec",129],153:["input",129],154:["sys",128],160:["CHAR",0],161:["F08",24],162:["DQUOTE",2],163:["WORD",21],164:["UWORD",17],165:["F2416",30],166:["BYTE",16],167:["SQUOTE",2],168:["F88",29],169:["FLOAT",31],170:["DCHAR",1],171:["inc",128],172:["QQUOTE",2],173:["dec",128],174:["_label",128],175:["rem",128],176:["+",34],177:["-",34],178:["*",35],179:["&&",32],180:["/",35],181:["||",32],182:["%",35],183:["^",36],184:["&",36],185:["|",36],186:["<",33],187:["=",33],188:[">=",33],189:["<>",33],190:["<=",33],191:[">",33],192:["print",128],193:["data",128],194:["bitmap",136],195:["fcall",128],196:["dend",192],197:["else",144],198:["fast",160],199:["gosub",129],200:["elif",144],201:["dim",160],202:["open",128],203:["color",130],204:["loop",192],205:["memcopy",130],206:["end",192],207:["do",224],208:["dpoke",129],209:["close",129],210:["return",129],211:["sprite",136],212:["timer",128],213:["get",128],214:["font",136],215:["wait",130],217:["inkey",128],218:["settings",128],220:["to",64],222:["pi",64],223:["right",98],224:["_lf",192],225:["cos",97],226:["int",97],227:["tan",97],228:["addr",64],229:["sgn",97],230:["limit",98],231:["mid",98],232:["step",64],233:["fpi",64],234:["atn",97],235:["frac",97],236:["dpeek",98],237:["spc",97],238:["sin",97],239:["peek",98],240:["abs",97],241:["left",98],242:["rnd",98],243:["when",98],244:["has",98],245:["tab",97],246:["len",97],247:["time",64],248:["sub",96],249:["ord",97],250:["_sh_lf",0],251:["fn",64],252:["chr",97],253:["find",96],254:["val",97],255:["between",98]},Re={print:[192,128],locate:[128,130],inc:[171,128],dec:[173,128],let:[140,128],set:[147,128],for:[134,160],next:[142,192],repeat:[146,160],if:[137,176],then:[148,192],endif:[133,192],else:[197,144],elif:[200,144],do:[207,224],loop:[204,192],while:[151,129],until:[149,129],fast:[198,160],fcall:[195,128],fend:[138,192],poke:[144,129],dpoke:[208,129],read:[129,128],def:[132,160],call:[131,128],dend:[196,192],goto:[135,129],gosub:[199,129],on:[143,128],return:[210,129],end:[206,192],clr:[139,128],dim:[201,160],local:[136,128],inkey:[217,128],sys:[154,128],wait:[215,130],input:[153,129],timer:[212,128],memcopy:[205,130],memset:[141,130],color:[203,130],data:[193,128],exec:[152,129],open:[202,128],get:[213,128],close:[209,129],break:[130,192],continue:[145,192],sprite:[211,136],voice:[150,136],bitmap:[194,136],font:[214,136],settings:[218,128]},Ae={print:192,locate:128,inc:171,dec:173,let:140,set:147,for:134,next:142,repeat:146,if:137,then:148,endif:133,else:197,elif:200,do:207,loop:204,while:151,until:149,fast:198,fcall:195,fend:138,poke:144,dpoke:208,read:129,def:132,call:131,dend:196,goto:135,gosub:199,on:143,return:210,end:206,clr:139,dim:201,local:136,inkey:217,sys:154,wait:215,input:153,timer:212,memcopy:205,memset:141,color:203,data:193,exec:152,open:202,get:213,close:209,break:130,continue:145,sprite:211,voice:150,bitmap:194,font:214,settings:218},ce={BYTE:{shortCode:"b",longCode:"BYTE",tokenValue:166,type_value:16,rangeMin:0,rangeMax:256,description:"8bit integer number, values: 0..255"},WORD:{shortCode:"W",longCode:"WORD",tokenValue:163,type_value:21,rangeMin:-32768,rangeMax:32768,description:"16bit signed integer number, values: -32768..32767"},UWORD:{shortCode:"w",longCode:"UWORD",tokenValue:164,type_value:17,rangeMin:0,rangeMax:65536,description:"16bit unsigned integer number, values: 0..65535"},F08:{shortCode:"f",longCode:"F08",tokenValue:0,type_value:24,rangeMin:0,rangeMax:1,description:"8bit unsigned fractional number, values: 0.0..1.0"},F88:{shortCode:"S",longCode:"F88",tokenValue:0,type_value:29,rangeMin:-128,rangeMax:128,description:"16bit signed fractional number, values: -128.0..128.0"},F2416:{shortCode:"L",longCode:"F2416",tokenValue:165,type_value:30,rangeMin:null,rangeMax:null,description:"5 bytes signed number, 24bit integer and 16 bit fractional part"},FLOAT:{shortCode:"%",longCode:"FLOAT",tokenValue:0,type_value:31,rangeMin:null,rangeMax:null,description:"Legacy float number"},CHAR:{shortCode:"c",longCode:"CHAR",tokenValue:160,type_value:0,rangeMin:null,rangeMax:null,description:"8bit single character"},DCHAR:{shortCode:"d",longCode:"DCHAR",tokenValue:0,type_value:1,rangeMin:null,rangeMax:null,description:"16bit, 2 characters"},VARSTR:{shortCode:"$",longCode:"VARSTR",tokenValue:-1,type_value:2,rangeMin:null,rangeMax:null,description:"Variable length string - each operation creates a new item in memory. Data: [len][STR...]"},FIXSTR:{shortCode:"$",longCode:"FIXSTR",tokenValue:-1,type_value:3,rangeMin:null,rangeMax:null,description:"Fixed length string, always uses the same memory. Data: [maxlen][len][STR...][unused...]"},NONE:{shortCode:"0",longCode:"NONE",tokenValue:0,type_value:0,rangeMin:0,rangeMax:0,description:""},UBYTE:{shortCode:"b",longCode:"UBYTE",tokenValue:0,type_value:16,rangeMin:0,rangeMax:256,description:""},SBYTE:{shortCode:"B",longCode:"SBYTE",tokenValue:0,type_value:20,rangeMin:-128,rangeMax:128,description:""},SWORD:{shortCode:"W",longCode:"SWORD",tokenValue:0,type_value:21,rangeMin:-32768,rangeMax:32768,description:""},UF08:{shortCode:"f",longCode:"UF08",tokenValue:0,type_value:24,rangeMin:0,rangeMax:1,description:""},SF08:{shortCode:"F",longCode:"SF08",tokenValue:0,type_value:28,rangeMin:null,rangeMax:null,description:""},UF88:{shortCode:"s",longCode:"UF88",tokenValue:0,type_value:25,rangeMin:0,rangeMax:256,description:""},SF88:{shortCode:"S",longCode:"SF88",tokenValue:0,type_value:29,rangeMin:-128,rangeMax:128,description:""},UF2416:{shortCode:"l",longCode:"UF2416",tokenValue:0,type_value:26,rangeMin:null,rangeMax:null,description:""},SF2416:{shortCode:"L",longCode:"SF2416",tokenValue:0,type_value:30,rangeMin:null,rangeMax:null,description:""}},xe={b:{shortCode:"b",longCode:"UBYTE",tokenValue:0,type_value:16,rangeMin:0,rangeMax:256,description:""},W:{shortCode:"W",longCode:"SWORD",tokenValue:0,type_value:21,rangeMin:-32768,rangeMax:32768,description:""},w:{shortCode:"w",longCode:"UWORD",tokenValue:164,type_value:17,rangeMin:0,rangeMax:65536,description:"16bit unsigned integer number, values: 0..65535"},f:{shortCode:"f",longCode:"UF08",tokenValue:0,type_value:24,rangeMin:0,rangeMax:1,description:""},S:{shortCode:"S",longCode:"SF88",tokenValue:0,type_value:29,rangeMin:-128,rangeMax:128,description:""},L:{shortCode:"L",longCode:"SF2416",tokenValue:0,type_value:30,rangeMin:null,rangeMax:null,description:""},"%":{shortCode:"%",longCode:"FLOAT",tokenValue:0,type_value:31,rangeMin:null,rangeMax:null,description:"Legacy float number"},c:{shortCode:"c",longCode:"CHAR",tokenValue:160,type_value:0,rangeMin:null,rangeMax:null,description:"8bit single character"},d:{shortCode:"d",longCode:"DCHAR",tokenValue:0,type_value:1,rangeMin:null,rangeMax:null,description:"16bit, 2 characters"},$:{shortCode:"$",longCode:"FIXSTR",tokenValue:-1,type_value:3,rangeMin:null,rangeMax:null,description:"Fixed length string, always uses the same memory. Data: [maxlen][len][STR...][unused...]"},0:{shortCode:"0",longCode:"NONE",tokenValue:0,type_value:0,rangeMin:0,rangeMax:0,description:""},B:{shortCode:"B",longCode:"SBYTE",tokenValue:0,type_value:20,rangeMin:-128,rangeMax:128,description:""},F:{shortCode:"F",longCode:"SF08",tokenValue:0,type_value:28,rangeMin:null,rangeMax:null,description:""},s:{shortCode:"s",longCode:"UF88",tokenValue:0,type_value:25,rangeMin:0,rangeMax:256,description:""},l:{shortCode:"l",longCode:"UF2416",tokenValue:0,type_value:26,rangeMin:null,rangeMax:null,description:""}},Fe={font_set_source0_target0:0,font_set_source0_target1:1,font_set_source1_target0:4,font_set_source1_target1:5,font_set_source_rom_target0:8,font_set_source_rom_target1:9,font_def_uncompressed_multi:16,font_def_uncompressed_1:17,font_def_uncompressed_2:18,font_def_uncompressed_3:19,font_def_uncompressed_4:20,font_def_uncompressed_5:21,font_def_uncompressed_6:22,font_def_uncompressed_7:23,font_copy_full:24,font_copy_lo:25,font_copy_hi:26,font_copy_range_same_index:27,font_copy_range:28,font_create_2x1:32,font_create_2x2:33,font_map_4x4_from:35,font_map_4x4_full:36,font_map_4x8_default:37,font_map_4x8_full:38,font_map_8x4_default:39,font_map_8x4_full:40,font_set_8x8_fill:41,font_use_1x1:48,font_use_2x1:49,font_use_2x2:50,font_use_4x4:51,font_use_4x8:52,font_use_8x4:53,font_use_8x8:54,font_invert_all:64,font_invert_range:65,font_create_from_spr_3x3:81,font_create_from_spr_3x2:82,font_create_from_spr_2x3:83,font_create_from_spr_2x2:84},De={pi:[222,64],fpi:[233,64],to:[220,64],step:[232,64],peek:[239,98],dpeek:[236,98],rnd:[242,98],cos:[225,97],sin:[238,97],tan:[227,97],atn:[234,97],int:[226,97],frac:[235,97],ord:[249,97],chr:[252,97],when:[243,98],addr:[228,64],len:[246,97],val:[254,97],abs:[240,97],left:[241,98],mid:[231,98],right:[223,98],find:[253,96],sub:[248,96],time:[247,64],tab:[245,97],spc:[237,97],sgn:[229,97],fn:[251,64],has:[244,98],between:[255,98],limit:[230,98]},Le={type:["t",0,0],size:["S",0,0],addr:["@",0,0],word:["w",32,0],byte:["b",32,0],fx2:["f",32,0],fx5:["F",32,0],frac:["F×",32,0],chr:["$",48,16],str:["s",48,16],int:["i",48,16],abs:["a",48,16],sign:["n",48,16],rdn:["r",48,16],rup:["R",48,16],minus:["M×",48,16],plus:["P×",48,16],dbl:["d",48,16],div2:["D",48,16],ord:["o",48,0],ucase:["C",48,0],lcase:["c",48,0],lo:["l",0,0],hi:["h",0,0],lnib:["L",0,0],hnib:["H",0,0],lnib2:["L×",0,0],hnib2:["H×",0,0],getw:["G",24,16],getb:["g",24,16],avg:["A",32,32],sum:["S×",32,32],min:["m",255,1],max:["M",255,1],ix:["I×",255,1],jx:["J×",255,1],kx:["K×",255,1],push:["p",255,1],pop:["P",255,1],ax:["A×",255,1],axm:["x",255,1]},Ie={tab:128,transparent:129,recolor_only:130,stop:131,scroll_actual_column:132,white:133,home_current_line:134,end_current_line:135,disable_c_shift:136,enable_c_shift:137,rep_next:138,rep_double:139,rep_between:140,return:141,lo_up_charset:142,scroll_circular_on:143,scroll_actual_line:144,down:145,reverse_on:146,home:147,delete:148,clear_line_content:149,remove_line:150,scroll_left:151,scroll_right:152,scroll_up:153,scroll_down:154,setx:155,red:156,right:157,green:158,blue:159,stamp_set_mode:160,stamp_use:161,stamp_use_last:162,window_start:163,window_stop:164,box_set_single:165,box_set_style:166,box_user_def:167,box_draw_filled:168,box_draw_empty:169,box_set_sides:170,box_box_filled_compr:171,box_box_empty_compr:172,use_fn:173,setxy:174,typewriter_mode:175,buffer_def:176,buffer_opt:177,buffer_copy:178,buffer_paste:179,input_rx:180,input_cursor:181,format_str:182,format_dec:183,format_hex:184,decompress:185,set_mode_a:186,set_mode_b:187,set_mode_c:188,scroll_set_area:189,scroll_window:190,scroll_screen:191,background:192,orange:193,border:194,run:195,sety:196,f1:197,f3:198,f5:199,f7:200,f2:201,f4:202,f6:203,f8:204,shift_return:205,up_gfx_charset:206,scroll_circular_off:207,black:208,up:209,reverse_off:210,clear:211,insert:212,brown:213,pink:214,dark_gray:215,gray:216,light_green:217,light_blue:218,light_gray:219,purple:220,cursor_left:221,yellow:222,cyan:223,set_addr0:224,set_addr1:225,set_addr2:226,set_addr3:227,push_one:228,push_two:229,push_multi:230,print_src_var:231,print_src_addr:232,print_db:233,print_dw:234,print_hb:235,print_hw:236,print_s:237,print_f:238,format_f:239,def_f1:240,def_f3:241,def_f5:242,def_f7:243,def_f2:244,def_f4:245,def_f6:246,def_f8:247,parambuff_susp:248,parambuff_on:249,parambuff_off:250,set_col_bckg:251,set_col_bord:252,set_col_bcbd:253,decode:254,extra_ff:255,pos_save:65281,pos_load:65282,qsys:65283,qsys_bank:65284,set_tab:65285,poke_single:65286,set_mem:65287,fill_mem:65288},le={0:"@",1:"a",2:"b",3:"c",4:"d",5:"e",6:"f",7:"g",8:"h",9:"i",10:"j",11:"k",12:"l",13:"m",14:"n",15:"o",16:"p",17:"q",18:"r",19:"s",20:"t",21:"u",22:"v",23:"w",24:"x",25:"y",26:"z",27:"[",29:"]",32:" ",33:"!",34:'"',35:"#",36:"$",37:"%",38:"&",39:"'",40:"(",41:")",42:"*",43:"+",44:",",45:"-",46:".",47:"/",48:"0",49:"1",50:"2",51:"3",52:"4",53:"5",54:"6",55:"7",56:"8",57:"9",58:":",59:";",60:"<",61:"=",62:">",63:"?",65:"A",66:"B",67:"C",68:"D",69:"E",70:"F",71:"G",72:"H",73:"I",74:"J",75:"K",76:"L",77:"M",78:"N",79:"O",80:"P",81:"Q",82:"R",83:"S",84:"T",85:"U",86:"V",87:"W",88:"X",89:"Y",90:"Z",97:"K×",98:"I×",99:"T×",101:"G×",103:"M×",106:"N×",107:"Q×",108:"D×",109:"Z×",110:"S×",111:"P×",112:"A×",113:"E×",114:"R×",115:"W×",116:"H×",117:"J×",118:"L×",119:"Y×",120:"U×",121:"O×",123:"F×",124:"C×",125:"X×",126:"V×",127:"B×",28:"{POUND}",30:"{ARR UP}",31:"{ARR LEFT}",64:"{SH *}",91:"{SH +}",92:"{CM -}",93:"{SH -}",94:"{PI}",95:"{CM *}",96:"{SH SPACE}",100:"{CM @}",102:"{CM +}",104:"{CM POUND}",105:"{SH POUND}",122:"{SH @}"},N={"@":0,a:1,b:2,c:3,d:4,e:5,f:6,g:7,h:8,i:9,j:10,k:11,l:12,m:13,n:14,o:15,p:16,q:17,r:18,s:19,t:20,u:21,v:22,w:23,x:24,y:25,z:26,"[":27,"]":29," ":32,"!":33,'"':34,"#":35,$:36,"%":37,"&":38,"'":39,"(":40,")":41,"*":42,"+":43,",":44,"-":45,".":46,"/":47,0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,":":58,";":59,"<":60,"=":61,">":62,"?":63,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,"K×":97,"I×":98,"T×":99,"G×":101,"M×":103,"N×":106,"Q×":107,"D×":108,"Z×":109,"S×":110,"P×":111,"A×":112,"E×":113,"R×":114,"W×":115,"H×":116,"J×":117,"L×":118,"Y×":119,"U×":120,"O×":121,"F×":123,"C×":124,"X×":125,"V×":126,"B×":127,"{POUND}":28,"{ARR UP}":30,"{ARR LEFT}":31,"{SH *}":64,"{SH +}":91,"{CM -}":92,"{SH -}":93,"{PI}":94,"{CM *}":95,"{SH SPACE}":96,"{CM @}":100,"{CM +}":102,"{CM POUND}":104,"{SH POUND}":105,"{SH @}":122,Ł:28,"^":30,"~":31,"<==":31,"<_":31,"<--":31},Pe={spr_autoinc_0:0,spr_copy_idx:3,spr_rot_fill:4,spr_mirr_fill_multi:5,spr_mirr_fill_sing:6,spr_spec:15,spr_mirr_h_mult:16,spr_mirr_h_sing:17,spr_mirr_v:18,spr_rot90:19,spr_rot180_sing:20,spr_rot180_mult:21,spr_rot270:22,spr_rot90_mirr_h_sing:23,spr_rot90_mirr_v_sing:24,spr_sh_left_mult:26,spr_sh_right_mult:27,spr_sh_left_sing:28,spr_sh_right_sing:29,spr_sh_up:30,spr_sh_down:31,spr_def_raw:33,spr_copy:34,spr_def_cmp0:35,spr_def_cmp_base:36,spr_double_x:41,spr_double_y:42,spr_double_xy:43,spr_use_predef0:48,spr_use_predef1:49,spr_use_predef2:50,spr_use_predef3:51,spr_use_predef4:52,spr_use_predef5:53,spr_use_predef6:54,spr_use_predef7:55,spr_set_predef0:56,spr_set_predef1:57,spr_set_predef2:58,spr_set_predef3:59,spr_set_predef4:60,spr_set_predef5:61,spr_set_predef6:62,spr_set_predef7:63,spr_autoinc_S:64,spr_inc_S:65,spr_dec_S:66,spr_copy_idx_S:67,spr_rot_fill_S:68,spr_mirr_fill_multi_S:69,spr_mirr_fill_sing_S:70,spr_spec_S:79,spr_mirr_h_mult_S:80,spr_mirr_h_sing_S:81,spr_mirr_v_S:82,spr_rot90_S:83,spr_rot180_sing_S:84,spr_rot180_mult_S:85,spr_rot270_S:86,spr_rot90_mirr_h_sing_S:87,spr_rot90_mirr_v_sing_S:88,spr_sh_left_mult_S:90,spr_sh_right_mult_S:91,spr_sh_left_sing_S:92,spr_sh_right_sing_S:93,spr_sh_up_S:94,spr_sh_down_S:95,spr_set_idx_S:96,spr_def_raw_S:97,spr_copy_S:98,spr_def_cmp0_S:99,spr_def_cmp_base_S:100,spr_double_x_S:105,spr_double_y_S:106,spr_double_xy_S:107,spr_use_predef0_S:112,spr_use_predef1_S:113,spr_use_predef2_S:114,spr_use_predef3_S:115,spr_use_predef4_S:116,spr_use_predef5_S:117,spr_use_predef6_S:118,spr_use_predef7_S:119,spr_set_predef0_S:120,spr_set_predef1_S:121,spr_set_predef2_S:122,spr_set_predef3_S:123,spr_set_predef4_S:124,spr_set_predef5_S:125,spr_set_predef6_S:126,spr_set_predef7_S:127,spr_autoinc_T:128,spr_inc_T:129,spr_dec_T:130,spr_copy_idx_T:131,spr_rot_fill_T:132,spr_mirr_fill_multi_T:133,spr_mirr_fill_sing_T:134,spr_spec_T:143,spr_mirr_h_mult_T:144,spr_mirr_h_sing_T:145,spr_mirr_v_T:146,spr_rot90_T:147,spr_rot180_sing_T:148,spr_rot180_mult_T:149,spr_rot270_T:150,spr_rot90_mirr_h_sing_T:151,spr_rot90_mirr_v_sing_T:152,spr_sh_left_mult_T:154,spr_sh_right_mult_T:155,spr_sh_left_sing_T:156,spr_sh_right_sing_T:157,spr_sh_up_T:158,spr_sh_down_T:159,spr_set_idx_T:160,spr_def_raw_T:161,spr_copy_T:162,spr_def_cmp0_T:163,spr_def_cmp_base_T:164,spr_double_x_T:169,spr_double_y_T:170,spr_double_xy_T:171,spr_use_predef0_T:176,spr_use_predef1_T:177,spr_use_predef2_T:178,spr_use_predef3_T:179,spr_use_predef4_T:180,spr_use_predef5_T:181,spr_use_predef6_T:182,spr_use_predef7_T:183,spr_set_predef0_T:184,spr_set_predef1_T:185,spr_set_predef2_T:186,spr_set_predef3_T:187,spr_set_predef4_T:188,spr_set_predef5_T:189,spr_set_predef6_T:190,spr_set_predef7_T:191,spr_autoinc_TS:192,spr_inc_TS:193,spr_dec_TS:194,spr_copy_idx_TS:195,spr_rot_fill_TS:196,spr_mirr_fill_multi_TS:197,spr_mirr_fill_sing_TS:198,spr_spec_TS:207,spr_mirr_h_mult_TS:208,spr_mirr_h_sing_TS:209,spr_mirr_v_TS:210,spr_rot90_TS:211,spr_rot180_sing_TS:212,spr_rot180_mult_TS:213,spr_rot270_TS:214,spr_rot90_mirr_h_sing_TS:215,spr_rot90_mirr_v_sing_TS:216,spr_sh_left_mult_TS:218,spr_sh_right_mult_TS:219,spr_sh_left_sing_TS:220,spr_sh_right_sing_TS:221,spr_sh_up_TS:222,spr_sh_down_TS:223,spr_set_idx_TS:224,spr_def_raw_TS:225,spr_copy_TS:226,spr_def_cmp0_TS:227,spr_def_cmp_base_TS:228,spr_double_x_TS:233,spr_double_y_TS:234,spr_double_xy_TS:235,spr_use_predef0_TS:240,spr_use_predef1_TS:241,spr_use_predef2_TS:242,spr_use_predef3_TS:243,spr_use_predef4_TS:244,spr_use_predef5_TS:245,spr_use_predef6_TS:246,spr_use_predef7_TS:247,spr_set_predef0_TS:248,spr_set_predef1_TS:249,spr_set_predef2_TS:250,spr_set_predef3_TS:251,spr_set_predef4_TS:252,spr_set_predef5_TS:253,spr_set_predef6_TS:254,spr_set_predef7_TS:255},U={NEXT_ADDR:32,BRANCH_ADDR:16,FN_WITH_BRACKET:32,COMMAND:128},Q={a:1,b:2,c:3,d:4,e:5,f:6,g:7,h:8,i:9,j:10,k:11,l:12,m:13,n:14,o:15,p:16,q:17,r:18,s:19,t:20,u:21,v:22,w:23,x:24,y:25,z:26,A:27,B:28,C:29,D:30,E:31,F:32,G:33,H:34,I:35,J:36,K:37,L:38,M:39,N:40,O:41,P:42,Q:43,R:44,S:45,T:46,U:47,V:48,W:49,X:50,Y:51,Z:52,Ax:53,Bx:54,Cx:55,Dx:56,Ex:57,Fx:58,Gx:59,Hx:60,Ix:61,Jx:62,Kx:63,Lx:64,Mx:65,Nx:66,Ox:67,Px:68,Qx:69,Rx:70,Sx:71,Tx:72,Ux:73,Vx:74,Wx:75,Xx:76,Yx:77,Zx:78},h=class h{};h.CTT_COMMAND_TOKENS=Ne,h.TTC_COMMAND_TOKENS=Object.fromEntries(Object.entries(Z).map(([e,t])=>[e,t[0]])),h.TTC_SCREEN_TOKENS={...Ie,...Pe,...Fe},h.TTC_STRING_TOKENS=h.TTC_SCREEN_TOKENS,h.TTC_STRING_TOKENS_UPPER=Object.fromEntries(Object.entries(h.TTC_STRING_TOKENS).map(([e,t])=>[e.toUpperCase(),t])),h.CTT_STRING_TOKENS=Object.fromEntries(Object.entries(h.TTC_STRING_TOKENS).filter(([e,t])=>e.indexOf("spr_")!==0).map(([e,t])=>[t,e])),h.EXTRA_ZEROS=Object.fromEntries(Object.entries(Z).map(([e,t])=>{let r=0;return t[1]&U.COMMAND&&t[1]&(U.NEXT_ADDR|U.BRANCH_ADDR)&&(t[1]&U.NEXT_ADDR&&r++,t[1]&U.BRANCH_ADDR&&r++),[e,r*2]})),h.IS_COMMAND=Object.fromEntries(Object.entries(Z).map(([e,t])=>[e,!!(t[1]&U.COMMAND)])),h.CTT_SPRITE_TOKENS=Object.fromEntries(Object.entries(h.TTC_STRING_TOKENS).filter(([e,t])=>e.indexOf("spr_")==0).map(([e,t])=>[t,e])),h.blockEndToken=h.TTC_COMMAND_TOKENS._lf,h.finalToken=h.TTC_COMMAND_TOKENS.end,h.strDQuote=h.TTC_COMMAND_TOKENS.DQUOTE,h.strSQuote=h.TTC_COMMAND_TOKENS.SQUOTE,h.strBQuote=h.TTC_COMMAND_TOKENS.SQUOTE,h.strQQuote=h.TTC_COMMAND_TOKENS.QQUOTE,h.cmdParams={...Re},h.gbFuncs={SETPOS(e,t){const r=parseInt(e,10)+parseInt(t,10)*40;return[h.TTC_SCREEN_TOKENS.set_addr0+(r>>8),r&255]}};let T=h;const Y=class Y{static getTokensFromMemory(e,t=2049){const r=function(c,p){return c+p*256},s=[];let n=0,i=t,o="";for(;n<e.length;){let c=function(_){if(l>=128){const u=T.CTT_COMMAND_TOKENS[l];if(!u)return;_.key=l>162?"func":"command",_.value=u,o=u}l>=65&&l<=90&&(_.key="identifier",_.value=_.escapedValue),l==32&&(_.key="whiteSpc",_.value=_.escapedValue)};if(i<n+t||i<t||i>t+e.length){console.log(`Invalid address ${i}`);break}if(n=i-t,i=r(e[n],e[n+1]),i==0)break;const p=r(e[n+2],e[n+3]);s.push({key:"label",value:p.toString(10),pos:n+t}),n+=4;let d;d=m.scopeCommand;const x={key:"error",value:"error",escapedMode:"",escapedValue:""};let l=0;for(;n+t<i&&(l=e[n],l!=0);){switch(x.value="error",x.key="error",[x.escapedMode,x.escapedValue]=w.petsciiCodeToEscaped(l),d){case m.scopeCommand:c(x),d=m.scopeArgs,x.value=="rem"&&(d=m.scopeRem);break;case m.scopeRem:x.key="rem",x.value=x.escapedValue;break;case m.scopeString:if(x.escapedValue=='"'?(d=m.scopeArgs,x.key="other"):x.key="strDQuote",x.escapedMode=="code"){const _=Y.STR_CODES[o]||Y.STR_CODES.print;x.value=_[l]?`{${_[l]}}`:`{${x.escapedValue}}`}else x.value=x.escapedValue;break;case m.scopeArgs:x.value=x.escapedValue,x.key="other",c(x),x.value=='"'?d=m.scopeString:x.value==":"?d=m.scopeCommand:(x.value>="0"&&x.value<="9"||x.value==".")&&(x.key="floatNum");break}s.push({key:x.key,value:x.value,pos:n+t}),n++}s.push({key:"newLines",value:`
`,pos:n+t})}return s}static tokenArrayToRepr(e){let t="";return e.forEach(r=>{t+=r.value}),t}};Y.STR_CODES={print:T.CTT_STRING_TOKENS,sprite:T.CTT_SPRITE_TOKENS,font:T.CTT_STRING_TOKENS};let G=Y;const D=class D{static getGroups(e){const t={};return e===void 0||e?.groups===void 0?{}:(Object.keys(e.groups).forEach(r=>{if(e.groups&&e.groups[r]!==void 0&&e.groups[r]!==""){const s=e.groups[r];t[r]=s}}),t)}static verboseRegexp(e,t){const r=new RegExp("(?<!\\\\)\\s|[/][/].*|[/][*][\\s\\S]*[*][/]","g"),s=e.replace(r,"");return new RegExp(s,t)}static convertSpecToBytes(e,t){const r=t.tokens||{},s=t.funcs||{},n=t.worldLH===void 0?!0:t.worldLH;t.useUppercase===void 0||t.useUppercase;const i=[];let o;function c(l,_=!1){return!_&&l<256?[l]:n?[l&255,l>>8&255]:[l>>8&255,l&255]}D.STRING_PARSER.lastIndex=0;let p=1e4;const d=[];for(;o=D.STRING_PARSER.exec(e);){if(p--,p<0)throw"Too many iterations!";const l=D.getGroups(o),_=o[0];if(_===""||_==null)break;let u=[];if(l.deci!==void 0){const f=l.deci.trim();u=c(parseInt(f,10),f.slice(-1).toLowerCase()=="w")}else if(l.hexa!==void 0){const f=l.hexa.replace(/[$]|(0x)/,"");u=c(parseInt(f,16),f.slice(-1).toLowerCase()=="w")}else if(l.str_extra_fn!==void 0)if(s[l.str_extra_fn]===void 0){const f=Object.keys(s).map(S=>S.toLowerCase()),g=l.str_extra_fn.toLowerCase();if(f.includes(g)){const S=Object.keys(s)[f.indexOf(g)];u=s[S](...l.str_extra_fnparam.split(/,\s*/g))}else throw new Error(`Function not implemented: ${l.str_extra_fn}`)}else u=s[l.str_extra_fn](...l.str_extra_fnparam.split(/,\s*/g));else if(l.code!==void 0){if(r[l.code]!==void 0)u=r[l.code];else{u=r.undefined;const f=l.code.toLowerCase(),S=Object.keys(r).map(I=>I.toLowerCase()).indexOf(f);S>=0&&(u=Object.values(r)[S])}u===void 0&&(d.push({code:l.code,pos:(t.pos||0)+o.index}),u=[63])}else l.sep&&l.sep.trim()==","&&(u=[0]);let M=1;l.multi&&(M=parseInt(l.multi,10)),typeof u=="number"&&(u=[u]);for(let f=0;f<M;f++)i.push(...u)}const x=d.length>0?"ERROR":"OK";return{byteArray:i,status:x,invalidCodes:d}}static convertStringToBytes(e,t){const r=[],s=[];let n,i,o="OK";const c=t.normalConverter||(d=>String.prototype.charCodeAt.bind(d)(0)),p=/({[^}]+})|(.)/g;for(;n=p.exec(e);){const[d,x,l]=n;if(x){t.pos=n.index;const{byteArray:_,status:u,invalidCodes:M}=D.convertSpecToBytes(x.slice(1,-1),t);u!=="OK"&&(o=u,s.push(...M)),r.push(..._)}else i=c(l),r.push(i)}return{byteArray:r,status:o,invalidCodes:s}}};D.STRING_PARSER=D.verboseRegexp(String.raw`
         (\s*?)(
          (?<rem>(([-]{2}|[/]{2}).*$)|[/][*][\s\S]*?[*][/]) |

          ( (?<str_extra_fn>\w+\s*)[(]
            (?<str_extra_fnparam>[^)][^)]*?)
            (?<str_extra_end>[)])
          ) |

          (
            (?<code>[a-zA-Z_][a-zA-Z_0-9]*) |
            (?<hexa>(?:[$]|0x)[0-9a-fA-F]+[w]{0,1}) |
            (?<deci>[0-9]+[w]{0,1})

          )?
          (?:[*]?)
          (?<multi>[0-9]+)?
          (?<sep>[,;]\s*|$|\s+)?
        )
        `,"gm");let K=D;class Ve extends Array{}var F=(a=>(a.remark="remark",a.docstr="docstr",a.remMulti="remMulti",a.strDQuote="strDQuote",a.strSQuote="strSQuote",a.strBQuote="strBQuote",a.whiteSpc="whiteSpc",a.numHex="hexNum",a.numFloat="floatNum",a.numInt="intNum",a.identifier="identifier",a.other="other",a))(F||{});const $e={remark:[1100,String.raw`(?<remark>\/\/.*$)`],remDash:[1150,String.raw`(?<remark>[\-]{2}.*$)`],docstr:[1200,String.raw`(?<docstr>\/[*]{2}[\S\s]*?[*]\/)`],remMulti:[1300,String.raw`(?<rem_multi>\/[*][\S\s]*?[*]\/)`],strDQuote:[2100,String.raw`(?<other__strDO>\")(?<strDQuote>[^\"]*?)(?<other__strDC>\")`],strSQuote:[2200,String.raw`(?<other__strSO>\')(?<strSQuote>[^\']*?)(?<other__strSC>\')`],strBQuote:[2300,String.raw`(?<other__strBO>\`)(?<strBQuote>[^\`]*?)(?<other__strBC>\`)`],whiteSpc:[3100,String.raw`(?<whiteSpc>\s+)`],hexNum:[4100,String.raw`(?<hexNum>(0x[0-9a-f]+))`],floatNum:[4200,String.raw`(?<floatNum>(\d*[.]\d*))`],intNum:[4300,String.raw`(?<intNum>(\d+))`],identifier:[8100,String.raw`(?<identifier>[\w.]+)`]};class k{constructor(e){if(!e.TokenClass||!e.splitFunc||!e.rxPattern)throw Error("Invalid TokenizerSettings object. Use class to create one!");this.settings=e,this.TokenClass=this.settings.TokenClass,this.rxPattern=new RegExp(this.settings.rxPattern,"gm"),Object.keys(e.subFormatPatterns).length>0?this.subFormatPatterns=Object.fromEntries(Object.entries(e.subFormatPatterns).map(([t,r])=>[t,k.convertTokenizerFunction(r)])):this.subFormatPatterns={},this.rawText="",this.tokens=new Ve,this.linePosTable=[],this.tokenizedRaw=""}reset(){this.tokens=[],this.linePosTable=[]}static convertTokenizerFunction(e){return typeof e=="string"?k.verboseRegexp(e,"gm"):e}static verboseRegexp(e,t){const r=new RegExp("(?<!\\\\)\\s|[/][/].*|[/][*][\\s\\S]*[*][/]","g"),s=e.replace(r,"");return new RegExp(s,t)}static buildRxString(e,t=null,r="(?<other>.)"){const s=[];e.forEach(o=>{let c=t?.[o];if(c||(c=$e[o]),!c)throw Error(`Invalid item: ${o}`);s.push(c)});const n=s.sort((o,c)=>o[0]-c[0]).map(o=>o[1]);r&&n.push(r);const i=n.join(" | ");return k.verboseRegexp(i,"gm")}static noSplitter(e,t,r){return[e]}static lineSplitter(e,t,r){const s=e.value.split(/\r\n|\r|\n/gm);if(s.length==1)return[e];const n=[];return s.forEach((i,o)=>{if(o){const x=k.createToken("addNewLine","",e.pos,t,r);n.push(x)}const p=e.pos+0,d=k.createToken(e.key,i,p,t,r);n.push(d)}),n}getRxString(){return this.rxPattern.toString()}addToken(e,t,r){const s=k.createToken(e,t,r,this.settings,this.TokenClass);this.tokens.push(s)}static createToken(e,t,r,s,n){const i=s.mapper[e]||e,o=s.htmlClassPrefix+i,c=t,p=s.PrettifierClass.prettifyToken(e,i,c);return new n(e,t,r,c,p,i,o,s.tokenTypeMapper)}get currentPos(){const e=this.tokens[this.tokens.length-1].pos;return this.posToString(e)}tokenizeString(e){this.rawText=e,this.reset(),this.tokenizedRaw="",this.collectLineInfo();let t;this.rxPattern.lastIndex=0;let r=-1,s=1;for(;t=this.rxPattern.exec(this.rawText);){let n,i;if(!t.groups)throw Error("Use named capturing blocks!");const o=Object.entries(t.groups).filter(([p,d])=>d!=null);if(Object.values(o).reduce((p,d)=>p+d[1].length,0)!==t[0].length)throw Error(`Use named capturing blocks - not captured completely: ${t[0]}`);if(t.index==r)throw Error("Invalid regexp - do not use elements which can return empty values, e.g. (?<value>.*) !");if(t.index!=r+s){const p=e.slice(r+s,t.index);r==-1&&(r=0),this.addToken("_guard",p,r),this.tokenizedRaw+=p}o.forEach(p=>{[n,i]=p,n=n.replace(/__.*$/,""),(!this.settings.skipEmpty||i)&&(this.addToken(n,i,t.index),this.tokenizedRaw+=i)}),r=t.index||0,s=t[0].length||0}if(r+s<e.length){const n=e.slice(r+s);this.addToken("_guard",n,r),this.tokenizedRaw+=n}if(this.tokenizedRaw.length!=e.length)throw Error("Invalid regexp - characters are missing!")}collectLineInfo(){this.linePosTable=[];const e=this.rawText.split(`
`);let t=0,r=0;e.forEach(s=>{r=t+s.length;const n={start:t,end:r};this.linePosTable.push(n),t=r+1})}getLineInfo(e){let t=-1,r=-1;for(;e>t;)r++,t=this.linePosTable[r].end;return[r,this.linePosTable[r--].start]}posToString(e,t="ln %ln col %col",r=1){const[s,n]=this.getLineInfo(e),i=e-n;return t.replace("%ln",(s+r).toString()).replace("%pos",e.toString()).replace("%col",(i+r).toString())}static getNewLines(e){return e.key!=="whiteSpc"?0:e.value.match(/\r\n|\n|\r/g)?.length||0}getFormattedFromTokens(e="reprPretty"){const t=this.tokens,r=[""],s=[""],n=[""],i=[""],o=[""];return t.forEach((c,p,d)=>{const[x,l]=this.settings.PrettifierClass.getNewLineCountFunction(c,d,p);l?_(l):x&&this.settings.splitFunc(x,this.settings,this.TokenClass).forEach((g,S)=>{g.key=="addNewLine"?_(1):(g.value!=""||!this.settings.skipEmpty)&&M(g,this)});function _(f){for(let g=0;g<f;g++)r.push(""),s.push(""),n.push(""),i.push(""),o.push("")}function u(f,g,S,I,B){if(g in I){let W=function(V,R){const he=S.slice(V,R);q+=he.length,u(f,"error",he,I,B)};const P=I[g];if(typeof P=="function"){const[V,R]=P(g,S);return u(f,V,R,I,B),f}if(!(P instanceof RegExp))throw Error("Not a regexp value!");let O;P.lastIndex=0;let q=0,C=0;for(;O=P.exec(S);){if(!O||!O.groups||!O[0].length||O.index==null)throw Error("Update regexp - empty result!");Object.entries(O.groups).forEach(([V,R])=>{R&&(q+=R.length,u(f,V,R,I,B))}),O.index!=C&&W(C,O.index),C=O.index+O[0].length}if(C!=S.length&&W(C,S.length),q!=S.length)throw Error("Update regexp - characters are missing!");return f}else{const W=B.mapper[g.replace(/__.*$/,"")]||g.replace(/__.*$/,""),P=B.htmlClassPrefix+W;return S.replace(/ /g," ").split(`
`).forEach((C,V)=>{if(V>0&&_(1),C.length>0){const R=`<span class='${P}'>${C}</span>`;r[r.length-1]+=R,s[s.length-1]+=C,n[n.length-1]+=C,i[i.length-1]+=C,o[o.length-1]+=C}}),f}}function M(f,g){x!=null&&u([[]],f.key,f.value,g.subFormatPatterns,g.settings)}}),{allFormattedHTML:r,allTexts:s,allRepr:i,allReprPretty:o,allValues:n}}}const H={0:[],1:[T.TTC_COMMAND_TOKENS.BYTE],2:[T.TTC_COMMAND_TOKENS.WORD],3:[T.TTC_COMMAND_TOKENS.F08],4:[T.TTC_COMMAND_TOKENS.F88]};class j{constructor(e,t){this.typeCodes=e,this.settings=t}digitToArray(e){const t=parseInt(e);if(t<0||t>9)throw TypeError(`Invalid digit for byte parsing: ${e}`);return[w.textToScreen(e)]}byteToArray(e){const t=parseInt(e);if(t<-128||t>255)throw TypeError(`Invalid value for byte parsing: ${e}`);return[...this.typeCodes[1],t+256&255]}wordToArray(e){const t=parseInt(e);if(t<-32768||t>65535)throw TypeError(`Invalid value for word parsing: ${e}`);const r=t+65536&65535;return[...this.typeCodes[2],r&255,r>>8]}integerToArray(e){return this.settings.integerEncoders.map(r=>{try{return r.bind(this)(e)}catch{return[]}}).filter(r=>r.length>0)[0]}}const ue={allowDigits:!0,allowTokens:!0,integerEncoders:[j.prototype.digitToArray,j.prototype.byteToArray,j.prototype.wordToArray]},Ue=254;class z extends Error{constructor(e,t){const r=`Invalid variable name: ${e}. ${t}`;super(r),this.name="InvalidVariableNameError",Object.setPrototypeOf(this,new.target.prototype)}}function ze(a){return a.sort((r,s)=>Q[r]-Q[s]).reduce((r,s)=>{if(r.length===0)return[[s]];const n=r[r.length-1],i=n[n.length-1];return Q[s]===Q[i]+1?n.push(s):r.push([s]),r},[]).map(r=>r.length>2?`${r[0]}-${r[r.length-1]}`:r.join("")).join("")}class Qe{constructor(){this.rxTypesLong=Object.keys(ce).join("|"),this.rxTypesShort=Object.keys(xe).join("").replace(/0/,""),this.defaultSizePostfix={128:"$",254:""},this.numberTokenizer=new j(H,ue),this.variableMapping={}}getDimText(e){let t="";return e.forEach(r=>{r.category==="dimDetailsLong"&&(t+=r.value+`
`)}),t}getType(e){const t={dataLength:1,memBytes:1},r=/^(?<baseType>\$|FIXSTR|.*)[.]?(?<dataLength>\d+)?$/,s=e.match(r);let n=1;if(!s?.groups)throw new Error(`Invalid type string format: ${e}`);(s.groups.baseType==="$"||s.groups.baseType==="FIXSTR")&&(s?.groups.dataLength?n=Number(s.groups.dataLength):n=Ue,t.dataLength=n,t.memBytes=n+2);const i=s.groups.baseType;if(i in xe)return{...xe[i],...t};if(i.toUpperCase()in ce)return{...ce[i.toUpperCase()],...t};throw new Error(`Invalid type string format: ${e}`)}parseDimShort(e){throw Error("Not implemented dim short parse!")}parseDimLong(e,t){const r=k.verboseRegexp(String.raw`
            (?<wspc3>^\s*)(?<type>
                ${this.rxTypesLong} |
                ([$]\d+) |
                [${this.rxTypesShort}]
            )
            (?<arr_sign>(<[=-]{1,2}))?
            (?<arr_size>\d*)
            (?=$|\s+) |
            (
                (?<var_name>
                    [a-zA-Z][a-zA-Z_×]*
                )
                (?<wspc1>\s*[,;]?\s*)
                (
                    (?<comment>[-|\/]{2}.*?$) |
                    (?<break>,|$)
                )
            ) |
            (?<wspc2>[\t\x20]+\n?|\n) |

            (?<error_word>\w+) |
            (?<error>.)`,"gmi");r.lastIndex=0;let s,n=0,i=0;const o=[],c={};let p=null,d=0,x=null,l=0;for(;s=r.exec(e);){if(!s||!s.groups||!s[0].length||s.index==null)throw Error("Update regexp - empty result!");Object.entries(s.groups).forEach(([_,u])=>{if(u){if(n+=u.length,_==="type"&&(p=this.getType(u),d=0),_==="arr_size"&&(d=parseInt(u,10)),_==="var_name"){this.assertVarNameValid(u,t,!0),x=u;const M=x.replace(/×/g,"x"),f=Q[M]||l+100;c[x]={type:p,arr_size:d,comment:"",idx:l,idxScore:f},l++}_==="comment"&&x&&(c[x].comment=u.replace(/^--\s*/g,"")||""),_==="error"&&o.push([i,s?.index,u]),_==="error_word"&&o.push([i,s?.index,`Invalid word: ${u}`])}}),s.index!=i&&o.push([i,s.index,s[0]]),i=s.index+s[0].length,n!=i&&o.push([i,s?.index,e.substring(i,s?.index)])}if(i!=e.length&&o.push([i,0]),n!=e.length)throw Error("Update regexp - characters are missing!");return this.variableMapping=c,{vars:c,errors:o}}getVariableMapping(){return this.variableMapping}assertVarNameValid(e,t,r){const s=/^[a-zA-Z]×?$/.test(e),n=/^[a-zA-Z][a-zA-Z_]{1,}$/.test(e);if(!r&&!s)throw new z(e,"Only a single letter or a letter with × is allowed.");if(e in Z)throw new z(e,"Variable name cannot be a keyword.");if(r&&!t&&s)throw new z(e,"No single letter variable names are allowed. Use #directshort directive to allow them.");if(r&&n||r&&t&&s||!r&&s)return;throw new z(e,"Invalid variable name, ony a-z,A-Z, A×-Z×, _ are allowed.")}assignVariableNames(e){const t=Object.entries(e).sort((n,i)=>n[1].idxScore-i[1].idxScore),r=[...Object.keys(Q)],s={};return t.forEach(([n,i])=>{const o=i.idxScore<100;let c=n;if(o){const p=r.indexOf(n);if(p!==-1)r.splice(p,1);else throw new z(n,"Short variable name not found in possible variables.")}else if(c=r.shift()||"",!c)throw new z(n,"No more short variable names available.");s[c]={...i,varName:n,transformedVarName:c,isShortVar:o}}),s}encodeDimLong(e){const t=[],s={};Object.values(e).forEach(o=>{const{type:c,arr_size:p}=o,{encodedType:d,encodedTypeBytes:x}=this.getTypeCode(c,p);o.typeCode=d,o.encodedTypeBytes=x;const l=d;s[l]=s[l]||[],s[l].push(o)});const n=Object.values(e).sort((o,c)=>o.idx-c.idx).map(o=>o.typeCode).filter((o,c,p)=>p.indexOf(o)===c),i={};return Object.entries(s).forEach(([o,c])=>{if(o===null)return;const p=[];if(c[0].type==null)return;p.push(...c[0].encodedTypeBytes),i[o]=p;const d=c.map(_=>_.transformedVarName),x=ze(d),l=K.convertStringToBytes(x,de).byteArray;p.push(...l)}),n.forEach(o=>{const c=i[o];t.push(...c,N[","])}),t.pop(),t}getTypeCode(e,t){let r="";const s=[];if(e.shortCode!="$")r+=e.shortCode,s.push(N[e.shortCode]);else if(Object.keys(this.defaultSizePostfix).includes(e.dataLength.toString(10))){const n=this.defaultSizePostfix[e.dataLength];r+=`$${n}`,s.push(N.$,...K.convertStringToBytes(n,de).byteArray)}else r+=`$${e.dataLength}`,s.push(N.$,...this.numberTokenizer.integerToArray(e.dataLength.toString(10)));return t>0&&(r+=`{'<=='}${t.toString()}}`,e.shortCode=="$"&&s.push(N["<=="]),s.push(...this.numberTokenizer.integerToArray(t.toString(10)))),{encodedType:r,encodedTypeBytes:s}}}var y=(a=>(a[a.unset=0]="unset",a[a.mutableTrue=1]="mutableTrue",a[a.mutableFalse=2]="mutableFalse",a[a.finalTrue=3]="finalTrue",a[a.finalFalse=4]="finalFalse",a))(y||{});class A{constructor(e=0){this._value=0,this._value=e}isTrue(){return this._value===1||this._value===3}isFalse(){return this._value===2||this._value===4}isFinal(){return this._value===3||this._value===4}set value(e){this.isFinal()||(e===!0?this._value=1:e===!1?this._value=2:this._value=e)}}class Se{constructor(e){this.text=e,this.directives={},this.directiveValues=[],this.directiveFunctions={}}process(){this.readGlobalDirectiveValues()}analyzeVarsFromTokenized(e){}readGlobalDirectiveValues(){const e=/(?:^[\n\s]*)((#\S*\s*)+)/m,t=this.text.match(e);if(!t)return{result:[],error:null};const r=t[1].split(/\s+/).map(n=>n.trim().replace(/#/g,"")).filter(n=>n.length>0),s=[];return r.forEach(n=>{Object.keys(this.directives).indexOf(n)===-1&&s.push(n)}),s.length>0?{result:[],error:`Invalid directive(s): ${s.join(", ")}`}:{result:r,error:null}}useGlobalDirectives(){const e=this.readGlobalDirectiveValues();if(e.error)throw new Error(e.error);this.directiveValues=e.result,this.directiveValues.forEach(t=>{this.directiveFunctions[t]()})}getFinalDirectives(){const e={};return Object.entries(this.directives).forEach(([t,r])=>{r instanceof A&&(r=r.isTrue()),e[t]=r}),e}}class fe{static prettifyToken(e,t,r){return""}static getIndentOffset(e,t){return[0,0]}static getNewLineCountFunction(e,t,r){return[e,0]}}class je extends fe{static prettifyToken(e,t,r){return r}static getIndentOffset(e,t){return[0,0]}static getNewLineCountFunction(e,t,r){return e.key!=="whiteSpc"?[e,0]:[null,e.value.match(/\r\n|\n|\r/g)?.length||0]}}const se=class se{constructor(e,t,r,s,n,i,o,c=null){this.key=e,this.value=t,this.pos=r,this.repr=s,this.reprPretty=n,this.category=i,this.spanClass=o,this.byteData=[],this.typeMapper=c||se.defaultMapper}isRemark(){return this.typeMapper.remark.indexOf(this.key)>=0}isNumber(){return this.typeMapper.number.indexOf(this.key)>=0}isString(){return this.typeMapper.string.indexOf(this.key)>=0}isUnaryOperation(){return this.typeMapper.unaryOp.indexOf(this.value)>=0}isBinaryOperation(){return this.typeMapper.binaryOp.indexOf(this.value)>=0}isAssignment(){return this.typeMapper.assignment.indexOf(this.value)>=0}isType(e){return this.typeMapper[e].indexOf(this.key)>=0||this.typeMapper[e].indexOf(this.value)>=0}};se.defaultMapper={remark:["remark","rem_multi","docstr"],number:["hexNum","floatNum","intNum"],string:["strDQuote","strSQuote","strBQuote"],binaryOp:["+","-","<","<=","==",">",">=","!=","!==","===","||","&&","*","/","%","|","&"],unaryOp:["(","-","~"],assignment:["=","|=","&=","+=","-=","*=","/=","^="]};let J=se;class be{constructor(e){Object.keys(e).forEach(t=>{if(["rxPattern","subFormatPatterns","skipEmpty","mapper","PrettifierClass","TokenClass","splitFunc","getNewLineCountFunction","tokenTypeMapper","htmlClassPrefix"].indexOf(t)==-1)throw Error(`Invalid key ${t} for tokenizer settings!`)}),this.rxPattern=e.rxPattern||/(?<symbol>.)/g,this.subFormatPatterns=e.subFormatPatterns||{},this.skipEmpty=e.skipEmpty===void 0?!0:e.skipEmpty,this.mapper=e.mapper||{},this.htmlClassPrefix=e.htmlClassPrefix||"",this.splitFunc=e.splitFunc||k.noSplitter,this.tokenTypeMapper=e.tokenTypeMapper||J.defaultMapper,this.TokenClass=e.TokenClass||J,this.PrettifierClass=e.PrettifierClass||je,this.getNewLineCountFunction=e.getNewLineCountFunction||null}}const ne=class ne extends fe{static prettifyToken(e,t,r){return e!=="func"&&e!=="command"&&e!=="other"?r:e=="command"?r+" ":ne.PRETTIFY_REPL[r]||r}static getIndentOffset(e,t){return[0,0]}static getNewLineCountFunction(e,t,r){return e.key!=="newLines"?[e,0]:[null,e.value.match(/\r\n|\n|\r/g)?.length||0]}};ne.PRETTIFY_REPL={"=":" = ","+":" + ","-":" - ","*":" * ","/":" / ",",":", ",to:" to ",step:" step ",and:" and ",or:" or ",fn:"fn ",then:" then "};let ee=ne;const ve=(a,e)=>e.length-a.length,Ke=Object.keys(Ae).sort(ve).join("|"),Be=Object.entries(De).map(([a,e])=>{const[t,r]=e;return r&U.FN_WITH_BRACKET?String.raw`${a}\(`:a}).sort(ve).map(a=>a.slice(-1)=="("?a:a+"(?![a-zA-Z_])").join("|");var X=(a=>(a[a.AUTO=0]="AUTO",a[a.VERBOSE=1]="VERBOSE",a[a.SHORT=2]="SHORT",a))(X||{});class ae extends k{constructor(e={}){const t={1:{gbIdentifier:"gbIdentifierLong",gbDim:"gbDimLong"},2:{gbIdentifier:"gbIdentifierShort",gbDim:"gbDimShort"},0:{}};let r=e.verboseMode||0;r===0&&(r=1);const s={gbIdentifierLong:[8e3,String.raw`(?<identifier>[\w×]+)`],gbIdentifierShort:[8e3,String.raw`(?<identifier>[\w][×]?)`],gbSysVar:[8100,String.raw`(?<sysId>[@][\w×]+)`],gbPostfix:[8200,String.raw`(?<postfix>\.[\w×]+)`],gbLabel:[4e3,String.raw`(?<label>^[\w]+\s*[:]$)`],gbDimLong:[6e3,String.raw`(?<command__dim>dim)(?<dimDetailsLong>[^;]*)(?<whiteSpc__dim>;)`],gbDimShort:[6e3,String.raw`(?<command__dim>dim)(?<dimDetailsShort>[^;]*)(?<whiteSpc__dim>;)`],gbCommand:[6050,String.raw`(?<command>\?|${Ke})(?![a-zA-Z_])`],gbFunction:[6100,String.raw`(?<func>${Be})`],gbOperator:[6200,String.raw`(?<operator>(AND|OR|div|mod|xor|and|or)(?![a-zA-Z_])|[+\-*\/^>=<&])`],v2Sep:[7e3,String.raw`(?<commandSep>[:])`],newLines:[3050,String.raw`(?<newLines>(\r\n|\n|\r)+)`],whiteSpace:[3100,String.raw`(?<whiteSpc>[\t\ \xA0]+)`],gbTypes:[6300,String.raw`(?<idType>([us]?(byte|word|f08|f88|f2416|float))|char|dchar|varstr|fixstr|[$])`],gbRemDash:[1150,String.raw`(?<remarkDash>[\-]{2}.*$)`],gbSysBlock:[1e3,String.raw`(?<sysBlock>[#]start.*?[#]end\s*)`],gbSysCmd:[1200,String.raw`(?<sysCmd__const>[#]const[^;]+?[;])`],gbSysUse:[1200,String.raw`(?<use>^\s*[#]use\s+[\w=,]+)`],gbSysCmdOther:[1250,String.raw`(?<sysCmd__other>[#].*$)`],gbExpr:[6300,String.raw`(?<expr>[{][^}]*?[}])`],gbOther:[8500,String.raw`(?<other__8500>[@,;\(\)\[\]])`],gbStrQQuote:[2050,String.raw`(?<other_quote__strQO>\"\")(?<strQQuote>(?:[{][^}]*?[}]|.)*?)(?<other_quote__strQC>\"\")`],gbStrDQuote:[2100,String.raw`(?<other_quote__strDO>\")(?<strDQuote>(?:[{][^}]*?[}]|[^\"])*?)(?<other_quote__strDC>\")`],gbStrSQuote:[2200,String.raw`(?<other_quote__strSO>\')(?<strSQuote>(?:[{][^}]*?[}]|[^\'])*?)(?<other_quote__strSC>\')`],gbStrBQuote:[2300,String.raw`(?<other_quote__strBO>\`)(?<strBQuote>(?:[{][^}]*?[}]|[^\`])*?)(?<other_quote__strBC>\`)`]},n=k.buildRxString([F.remark,F.docstr,F.remMulti,F.numInt,F.numFloat,"gbSysCmdOther","gbSysCmd","gbSysBlock","gbSysUse","gbStrQQuote","gbStrDQuote","gbStrSQuote","gbStrBQuote","gbExpr","gbOther","gbRemDash","gbSysVar",t[r].gbIdentifier,"gbPostfix","gbLabel","gbOperator","gbTypes",t[r].gbDim,"gbCommand","gbFunction","newLines","v2Sep","whiteSpace"],s,""),i={strDQuote:String.raw`  (
                                      (?<other__sp_open>[{])
                                      (?<strSpecial>[^}]*?)
                                      (?<other__sp_close>[}])
                                    ) |
                                    (?<strNormal>[^{]+)`,strSpecial:String.raw`
            (?<whiteSpc__100>\s*?)(
             (?<remark__str>(([-]{2}|[/]{2}).*$)|[/][*][\s\S]*?[*][/]) |

             ( (?<func__str>\w+\s*)
                (?<other__bropen>[(])
                (?<strfunc_params>[^)]*?)
               (?<other__brclose>[)])
             ) |

             (
               (?<strSpecCheck>\w+) |
               (?<intNum__1>[a-zA-Z_][a-zA-Z_0-9]*) |
               (?<intNum__2>(?:[$]|0x)[0-9a-fA-F]+[w]{0,1}) |
               (?<intNum__3>[0-9]+[w]{0,1})
             )
             ((?<other__multi>\s*[*]\s*)(?<intNum__str>[0-9]+))?
             (?<other__100>[,;]\s*|\s+|\s*$)
           ) |
           (?<other__101>\s+) |
           (?<error>.+?)
           `,strSpecCheck:ae.validateCode,strfunc_params:String.raw`
                            (?<other__spec100>\")(?<strNormal__strspec>[^\"]*?)(?<other__spec150>\") |
                            (?<intNum__spec100>\d+) |
                            (?<other__spec200>[,]) |
                            (?<other__spec300>.)
                            `,dimDetailsShort:"__main"},o={command:"CMD",commandRem:"CMD",func:"FUNC",error:"ERR",strDQuote:"STR",strQQuote:"STR",strSQuote:"STR",strBQuote:"STR",strNormal:"STR",strSpec:"SPEC",label:"LABEL",floatNum:"NUM",intNum:"NUM",identifier:"VAR",identifier2:"VAR",idExtra:"EXTRA",idType:"FUNC",sysId:"FUNC",commandSep:"SEP",whiteSpc:"SPC",remark:"REM",remarkDash:"REM",rem_multi:"REM",docstr:"DOCSTR",other:"OTHER",other_quote:"SKIP",sysCmd:"SYS",sysCmd2:"SYS",postfix:"FUNC"},c=new be({rxPattern:n,subFormatPatterns:i,mapper:o,htmlClassPrefix:"editor-style-",PrettifierClass:ee});super(c)}static validateCode(e,t){return t.toUpperCase()in T.TTC_STRING_TOKENS_UPPER?["strSpec",t]:["error",t]}getTokensFromMemory(e){const t=G.getTokensFromMemory(e);this.reset(),t.forEach(r=>{this.addToken(r.key,String(r.value),r.pos)})}tokenizeStr(e){this.tokenizeString(e)}}class ye extends Se{constructor(){super(...arguments),this.directives={verbose:new A(y.mutableTrue),compact:new A(y.mutableFalse),strict:new A(y.mutableTrue),loose:new A(y.mutableFalse),inline:new A(y.mutableFalse),safe:new A(y.mutableTrue),trusted:new A(y.mutableFalse),directshort:new A(y.mutableFalse)},this.directiveFunctions={verbose:()=>{this.directives.verbose.value=!0,this.directives.compact.value=!1},compact:()=>{this.directives.verbose.value=!1,this.directives.compact.value=!0},strict:()=>{this.directives.strict.value=!0,this.directives.loose.value=!1},loose:()=>{this.directives.strict.value=!1,this.directives.loose.value=!0},inline:()=>{this.directives.inline.value=!0},safe:()=>{this.directives.safe.value=!0,this.directives.trusted.value=!1},trusted:()=>{this.directives.safe.value=!1,this.directives.trusted.value=!0},directshort:()=>{this.directives.directshort.value=!0}}}setSettings(e){e.verboseMode===X.VERBOSE?(this.directives.verbose.value=y.finalTrue,this.directives.compact.value=y.finalFalse):e.verboseMode===X.SHORT?(this.directives.verbose.value=y.finalFalse,this.directives.compact.value=y.finalTrue):e.verboseMode===X.AUTO&&(this.directives.verbose.value=!0,this.directives.compact.value=!1)}analyzeVarsFromTokenized(e){const t={};return e.forEach(r=>{r.category==="VAR"&&(t[r.value]=(t[r.value]||0)+1)}),t}getDimDetails(e){let t=0,r=e.findIndex(s=>s.category==="DIM");if(r===-1)return{memSettings:t};for(e[r+1]?.category=="intNum"&&(t=e[r+1].value,r+=2);r<e.length&&!(e[r].category==="commandSep"&&e[r].value===";");){if(e[r].category==="idType"){for(e[r].value,e[r+1]?.category==="intNum"&&(e[r+1].value,r++),r++;e[r]?.category==="VAR";)e[r].value,e[r].value;r++}r++}}}class ge{constructor(e,t){this.typeCodes=e,this.settings=t,this.subTokenized=[],this.varMappings={},this.validChars=[],this.reset()}reset(){this.subTokenized=[],this.varMappings={};const e=[],t=[],r=[];for(let s=0;s<26;s++)e.push(le[s+1]),t.push(le[s+65]),r.push(le[s+65]+"×");this.validChars.push(...e,...t,...r)}subTokenize(e,t=!1){let r=/(?<postindex>\.\d+|<-\d+)|(?<quickindex><-\w+)|(?<postfix>\.\w+)|(?<base>[a-z_A-Z×]+)/gm;t||(r=/(?<postindex>\.\d+|<-\d+)|(?<quickindex><-\w+)|(?<postfix>\.\w+)|(?<base>[a-zA-Z][×]?)(?<postfix2>[\w×]*)/gm),r.lastIndex=0;let s=null;const n=[];for(;(s=r.exec(e))!==null;){s.index===r.lastIndex&&r.lastIndex++;const i=s.groups?.base||"",o=s.groups?.postfix||"",c=s.groups?.postindex||"",p=s.groups?.quickindex||"",d=!t||i.length==1||i.length==2&&i[1]=="×";if(i){const x=d?i:this.longvarToShortvar(i);if(n.push(N[x]),s.groups?.postfix2){let l=0;for(;l<s.groups?.postfix2.length;){let _=s.groups?.postfix2[l];s.groups?.postfix2[l+1]=="×"&&(_+="×",l++),_&&n.push(N[_]),l++}}}if(o){const x=Le[o.replace(/\./g,"")][0];n.push(N[x])}else if(c){const x=c.replace(/<-|\./g,""),_=new j(H,ue).integerToArray(x);n.push(..._)}else if(p){const x=p.replace(/<-|\./g,""),l=d?x:this.longvarToShortvar(x);n.push(N["<--"]),n.push(N[l])}}return n}longvarToShortvar(e){if(this.settings.isStrict&&e.length>0&&this.settings.dimObject[e]===void 0)throw new Error(`Variable ${e} not found in DIM declaration`);const t=this.getNextShortVar();if(!t)throw new Error("No more short variable names available");const r=this.varMappings[t];if(r){if(r.longvar!==e)throw new Error(`Short variable ${t} already defined as ${r.longvar}`);return t}return this.varMappings[t]={shortvar:t,longvar:e,isArray:!1,length:0},t}getNextShortVar(){return this.validChars.shift()||""}}const me={isStrict:!1,dimObject:{}},de={tokens:T.TTC_STRING_TOKENS,normalConverter:w.textToScreen,funcs:T.gbFuncs},b=class b extends ${constructor(e={}){super(),this.varTokenizer=new ge(H,me)}static numEncoder(e,t){if(e.key=="intNum")return new j(H,ue).integerToArray(e.value);throw TypeError(`Invalid type for ${e.key}: ${e.value}`)}static dimEncoder(e,t){const r=new Qe,s=e.value,{vars:n,errors:i}=r.parseDimLong(s,!0),o=r.assignVariableNames(n);return r.encodeDimLong(o)}static stringEncoder(e,t){if(e.key=="other"&&e.value=="?")return[T.TTC_COMMAND_TOKENS.print];const r=[],{byteArray:s,status:n}=K.convertStringToBytes(e.repr,de);if(n!=="OK"&&console.log(n),["strDQuote","strSQuote","strBQuote","strQQuote"].includes(e.key)){const i=T[e.key];r.push(i),r.push(s.length)}return r.concat(s)}static otherEncoder(e,t){return t.lastCommand=="clr"&&e.repr==","?[]:b.stringEncoder(e,t)}static varEncoder(e,t){return t.varTokenizer.subTokenize(e.repr,t.isVerbose)}static cmdEncoder(e,t){const r=e.repr.replace("(",""),s=T.TTC_COMMAND_TOKENS[r],n=T.EXTRA_ZEROS[r];return n>0?[s,...Array(n).fill(0)]:(T.IS_COMMAND[r]&&(t.lastCommand=r),[s])}static encodeTextAsBytes(e,t={}){const r=new ye(e);r.setSettings(t),r.useGlobalDirectives();const s=new ae(t);s.tokenizeString(e),r.analyzeVarsFromTokenized(s.tokens);const n=r.getFinalDirectives();return b.encodeTokens(s.tokens,n)}static encodeTokens(e,t){const r=[],s={nextAddr:0,line:null,data:[]};function n(){if(s.data.length>0){const c=Object.assign({},s);r.push(c),s.data=[]}}const i={isVerbose:t.verbose,varTokenizer:new ge(H,me),lastCommand:""};e.forEach(c=>{if(c.category=="LABEL"){n(),parseInt(c.value,10);return}const p=b.encoders[c.key]||b.encoders[c.category];if(p){const d=p(c,i);c.byteData=d,s.data.push(...d)}else throw Error(`Encoder needed for ${c.key}, ${c.category} for value ${c.value}!`)}),n();const o=[];return r.forEach(c=>{o.push(...c.data,T.blockEndToken)}),o.push(T.finalToken),o}};b.encoders={idType:b.stringEncoder,postfix:b.varEncoder,STR:b.stringEncoder,NUM:b.numEncoder,VAR:b.varEncoder,SEP:b.stringEncoder,CMD:b.cmdEncoder,FUNC:b.cmdEncoder,operator:b.cmdEncoder,OTHER:b.otherEncoder,commandSep:$.voidEncoder,SKIP:$.voidEncoder,whiteSpc:$.voidEncoder,sysCmd:$.voidEncoder,newLines:$.voidEncoder,dimDetailsLong:b.dimEncoder};let pe=b;class we{constructor(e){this.settings=e,this.tokens=[],this.activeTokenId=0,this.token={},this.nextToken={},this.scope="",this.docStr={},this.params={},this.tags=[],this.labels={},this.functions={}}parseTokens(e){this.tokens=e,this.activeTokenId=0,this.token={key:"_whsp"},this.params={vars:{}},this.docStr={},this.scope="__global",this.tags=[],this.labels={},this.functions={}}isFinished(){return this.activeTokenId>=this.tokens.length}posToString(){return this.settings.posToStringFn(this.token.pos)}startTag(e,t){const r="   ".repeat(this.tags.length);this.tags.push(e),console.log(`${r}<${e}> ${t}`)}endTag(){const e=this.tags.pop(),t="   ".repeat(this.tags.length);console.log(`${t}</${e}>`)}advance(){if(this.isFinished())throw Error("Document finished unexpectedly!");do{this.token=this.tokens[this.activeTokenId],this.activeTokenId++,this.token.key==this.settings.keys._docstr&&(this.docStr[this.scope]=(this.docStr[this.scope]||"")+this.token.value);const e=this.activeTokenId;do this.nextToken=this.tokens[this.activeTokenId],this.activeTokenId++;while((this.nextToken.key==this.settings.keys._whsp||this.nextToken.isRemark())&&!this.isFinished());if(this.activeTokenId=e,this.nextToken==null)break}while((this.token.key==this.settings.keys._whsp||this.token.isRemark())&&!this.isFinished())}unexpectedToken(e){throw Error(`Unexpected token '${this.token.value}' at ${this.posToString()}. 
Expected: ${e}.`)}eatGivenType(e){this.advance(),this.token.key!==e&&this.unexpectedToken(e)}eatIdentifier(){return this.eatGivenType("identifier"),this.token}eatValue(e){this.advance(),this.token.value!==e&&this.unexpectedToken(e)}eatAnyOfList(e){this.advance(),e.indexOf(this.token.value)==-1&&e.indexOf(this.token.key)==-1&&this.unexpectedToken(e.toString())}eatMany(e){const t={},r=/([{]{2}(?<inputType>\w+)\s+(?<inputName>\w+)[}]{2})|(?<const>\S+)|(?<whitespace>\s+)/gm;let s=null;for(;(s=r.exec(e))!==null;)if(s.groups!==void 0&&(s.groups.const!==void 0?this.eatValue(s.groups.const):s.groups.inputType!==void 0&&(this.eatGivenType(s.groups.inputType),t[s.groups.inputName]=this.token),this.isFinished()))throw Error(`Unfinished expression, expected ${e}`);return t}parseVarDeclaration(){const e=this.eatIdentifier().value;this.eatValue(":");const t=this.eatIdentifier().value;this.params.vars[e]=t}parseClassConst(){this.parseConst()}parseParams(){let e="",t="";const r={};for(;this.eatAnyOfList(["identifier",")"]),!(this.token.value==")"||(e=this.token.value,t="any",this.eatAnyOfList([":",",",")"]),this.token.value==":"&&(t=this.eatIdentifier().value,this.eatAnyOfList([",",")"])),r[e]=t,this.token.value==")")););return r}parseExpression(){for(this.startTag("expression","");;){if(this.advance(),this.token.isUnaryOperation()&&this.advance(),!this.token.isNumber()){if(!this.token.isString())break}this.nextToken.isBinaryOperation()&&this.advance()}this.endTag()}parseDict(){for(this.eatValue("{");this.token.value!="}";)this.advance()}parseList(){this.eatValue("[");let e=1;for(;e!=0;)this.advance(),this.token.value=="["&&e++,this.token.value=="]"&&e--}parseConst(){const e=this.eatIdentifier().value;this.eatValue("="),this.startTag("const",e),this.nextToken.value=="{"?this.parseDict():this.nextToken.value=="["?this.parseList():this.parseExpression(),this.endTag()}parseBlock(){for(this.startTag("block","");;){const e=this.activeTokenId;if(this.advance(),this.token.value=="}"){this.activeTokenId=e;break}if(this.token.key=="keyword")switch(this.token.value){case"const":this.parseConst()}}this.endTag()}parseMethod(){const e=this.eatIdentifier().value;this.startTag("method",e),this.params.method=e,this.eatValue("("),this.parseParams(),this.eatValue("{"),this.parseBlock(),this.eatValue("}"),this.endTag()}parseMethods(){for(;this.parseMethod(),this.nextToken.value!="}";);}parseClass(){const t=this.eatMany("class {{identifier classname}} extends GolfClass {").classname.value;for(this.params.class=t,this.startTag("class",t);;){const r=this.activeTokenId;if(this.advance(),this.activeTokenId=r,this.token.value=="}")break;switch(this.nextToken.value){case":":this.parseVarDeclaration();break;case"=":this.parseClassConst();break;case"(":this.parseMethod();break}}this.eatValue("}"),this.endTag()}}const ie=class ie{constructor(e){this.posToStringFn=e.posToStringFn||String,this.keys=e.keys||ie.defaultKeys}};ie.defaultKeys={_whsp:"whiteSpc",_docstr:"docstr"};let te=ie;class He extends we{constructor(){const e=new te({});super(e)}}const Te={Tokenizer:ae,Prettifier:ee,Parser:He,Encoder:pe,Decoder:G,Preprocessor:ye},E=class E{};E.BASIC_TOKENS={128:"end",129:"for",130:"next",131:"data",132:"input#",133:"input",134:"dim",135:"read",136:"let",137:"goto",138:"run",139:"if",140:"restore",141:"gosub",142:"return",143:"rem",144:"stop",145:"on",146:"wait",147:"load",148:"save",149:"verify",150:"def",151:"poke",152:"print#",153:"print",154:"cont",155:"list",156:"clr",157:"cmd",158:"sys",159:"open",160:"close",161:"get",162:"new",163:"tab(",164:"to",165:"fn",166:"spc(",167:"then",168:"not",169:"step",170:"+",171:"-",172:"*",173:"/",174:"^",175:"and",176:"or",177:">",178:"=",179:"<",180:"sgn",181:"int",182:"abs",183:"usr",184:"fre",185:"pos",186:"sqr",187:"rnd",188:"log",189:"exp",190:"cos",191:"sin",192:"tan",193:"atn",194:"peek",195:"len",196:"str$",197:"val",198:"asc",199:"chr$",200:"left$",201:"right$",202:"mid$",203:"go",255:"pi"},E.SCREEN_COMMANDS={0:"null",1:"ct_a",2:"ct_b",3:"ct_c",4:"ct_d",5:"white",6:"ct_f",7:"ct_g",8:"ct_h",9:"ct_i",10:"ct_j",11:"ct_k",12:"ct_l",13:"return",14:"ct_n",15:"ct_o",16:"ct_p",17:"down",18:"reverse_on",19:"home",20:"delete",21:"ct_u",22:"ct_v",23:"ct_w",24:"ct_x",25:"ct_y",26:"ct_z",28:"red",29:"right",30:"green",31:"blue",32:"space",92:"pound",95:"arrow_left",129:"orange",133:"f1",134:"f3",135:"f5",136:"f7",137:"f2",138:"f4",139:"f6",140:"f8",144:"black",145:"up",146:"reverse_off",147:"clear",149:"brown",150:"pink",151:"dark_gray",152:"gray",153:"light_green",154:"light_blue",155:"light_gray",156:"purple",157:"left",158:"yellow",159:"cyan",160:"sh_space",161:"cm_k",162:"cm_i",163:"cm_t",164:"cm_@",165:"cm_g",166:"cm_+",167:"cm_m",168:"cm_pound",169:"sh_pound",170:"cm_n",171:"cm_q",172:"cm_d",173:"cm_z",174:"cm_s",175:"cm_p",176:"cm_a",177:"cm_e",178:"cm_r",179:"cm_w",180:"cm_h",181:"cm_j",182:"cm_l",183:"cm_y",184:"cm_u",185:"cm_o",186:"sh_@",187:"cm_f",188:"cm_c",189:"cm_x",190:"cm_v",191:"cm_b",192:"sh_asterisk",219:"sh_+",220:"cm_-",221:"sh_-",223:"cm_asterisk",255:"pi"},E.CTT_COMMAND_TOKENS=E.BASIC_TOKENS,E.TTC_COMMAND_TOKENS={end:128,for:129,next:130,data:131,"input#":132,input:133,dim:134,read:135,let:136,goto:137,run:138,if:139,restore:140,gosub:141,return:142,rem:143,stop:144,on:145,wait:146,load:147,save:148,verify:149,def:150,poke:151,"print#":152,print:153,cont:154,list:155,clr:156,cmd:157,sys:158,open:159,close:160,get:161,new:162,"tab(":163,to:164,fn:165,"spc(":166,then:167,not:168,step:169,"+":170,"-":171,"*":172,"/":173,"^":174,and:175,or:176,">":177,"=":178,"<":179,sgn:180,int:181,abs:182,usr:183,fre:184,pos:185,sqr:186,rnd:187,log:188,exp:189,cos:190,sin:191,tan:192,atn:193,peek:194,len:195,str$:196,val:197,asc:198,chr$:199,left$:200,right$:201,mid$:202,go:203,pi:255},E.CTT_SCREEN_TOKENS=E.SCREEN_COMMANDS,E.TTC_SCREEN_TOKENS={null:0,ct_a:1,ct_b:2,ct_c:3,ct_d:4,white:5,ct_f:6,ct_g:7,ct_h:8,ct_i:9,ct_j:10,ct_k:11,ct_l:12,return:13,ct_n:14,ct_o:15,ct_p:16,down:17,reverse_on:18,home:19,delete:20,ct_u:21,ct_v:22,ct_w:23,ct_x:24,ct_y:25,ct_z:26,red:28,right:29,green:30,blue:31,space:32,pound:92,arrow_left:95,orange:129,f1:133,f3:134,f5:135,f7:136,f2:137,f4:138,f6:139,f8:140,black:144,up:145,reverse_off:146,clear:147,brown:149,pink:150,dark_gray:151,gray:152,light_green:153,light_blue:154,light_gray:155,purple:156,left:157,yellow:158,cyan:159,sh_space:160,cm_k:161,cm_i:162,cm_t:163,"cm_@":164,cm_g:165,"cm_+":166,cm_m:167,cm_pound:168,sh_pound:169,cm_n:170,cm_q:171,cm_d:172,cm_z:173,cm_s:174,cm_p:175,cm_a:176,cm_e:177,cm_r:178,cm_w:179,cm_h:180,cm_j:181,cm_l:182,cm_y:183,cm_u:184,cm_o:185,"sh_@":186,cm_f:187,cm_c:188,cm_x:189,cm_v:190,cm_b:191,sh_asterisk:192,"sh_+":219,"cm_-":220,"sh_-":221,cm_asterisk:223,pi:255},E.TTC_STRING_TOKENS=E.TTC_SCREEN_TOKENS;let L=E;class ke{static getTokensFromMemory(e,t=2049){const r=function(o,c){return o+c*256},s=[];let n=0,i=t;for(;n<e.length;){let o=function(l){if(x>=128){const _=L.CTT_COMMAND_TOKENS[x];if(!_)return;l.key=x>162?"func":"command",l.value=_}x>=65&&x<=90&&(l.key="identifier",l.value=l.escapedValue),x==32&&(l.key="whiteSpc",l.value=l.escapedValue)};if(i<n+t||i<t||i>t+e.length){console.log(`Invalid address ${i}`);break}if(n=i-t,i=r(e[n],e[n+1]),i==0)break;const c=r(e[n+2],e[n+3]);s.push({key:"label",value:c.toString(10),pos:n+t}),n+=4;let p;p=m.scopeCommand;const d={key:"error",value:"error",escapedMode:"",escapedValue:""};let x=0;for(;n+t<i&&(x=e[n],x!=0);){switch(d.value="error",d.key="error",[d.escapedMode,d.escapedValue]=w.petsciiCodeToEscaped(x),p){case m.scopeCommand:o(d),p=m.scopeArgs,d.value=="rem"&&(p=m.scopeRem);break;case m.scopeRem:d.key="rem",d.value=d.escapedValue;break;case m.scopeString:d.escapedValue=='"'?(p=m.scopeArgs,d.key="other"):d.key="strDQuote",d.escapedMode=="code"?d.value=L.CTT_SCREEN_TOKENS[x]?`{${L.CTT_SCREEN_TOKENS[x]}}`:`{${d.escapedValue}}`:d.value=d.escapedValue;break;case m.scopeArgs:d.value=d.escapedValue,d.key="other",o(d),d.value=='"'?p=m.scopeString:d.value==":"?p=m.scopeCommand:(d.value>="0"&&d.value<="9"||d.value==".")&&(d.key="floatNum");break}s.push({key:d.key,value:d.value,pos:n+t}),n++}s.push({key:"newLines",value:`
`,pos:n+t})}return s}static tokenArrayToRepr(e){let t="";return e.forEach(r=>{t+=r.value}),t}}const oe=class oe extends fe{static prettifyToken(e,t,r){return e!=="func"&&e!=="command"&&e!=="other"?r:e=="command"?r+" ":oe.PRETTIFY_REPL[r]||r}static getIndentOffset(e,t){return[0,0]}static getNewLineCountFunction(e,t,r){return e.key!=="newLines"?[e,0]:[null,e.value.match(/\r\n|\n|\r/g)?.length||0]}};oe.PRETTIFY_REPL={"=":" = ","+":" + ","-":" - ","*":" * ","/":" / ",",":", ",to:" to ",step:" step ",and:" and ",or:" or ",fn:"fn ",then:" then "};let re=oe;class Ce extends k{constructor(e={}){const t={v2Identifier:[8e3,String.raw`  (?<identifier>[\w]{1,2})      // First max 2 chars
                                            (?<idExtra>[\w]*)             // Remaining are not used
                                            (?<idType>[$%]?)              // Type declaration: $ or %
                                            `],v2Label:[2e3,String.raw`^(?<whiteSpc3>\s*)(?<label>[\d]+)`],v2Command:[6e3,String.raw`(?<command>end|for|next|data|input#|input|dim|read|let|goto|run|if|restore|gosub|return|rem|stop|on|wait|load|save|verify|def|poke|print#|print|cont|list|clr|cmd|sys|open|close|get|new)`],v2Function:[6100,String.raw`(?<identifier2>[\w]{0,2})?(?<func>tab\(|to|fn|spc\(|then|not|step|and|or|sgn|int|abs|usr|fre|pos|sqr|rnd|log|exp|cos|sin|tan|atn|peek|len|str\$|val|asc|chr\$|left\$|right\$|mid\$)`],V2Operator:[6200,String.raw`(?<operator>[+\-*/^>=<])`],v2Sep:[7e3,String.raw`(?<commandSep>[:])`],v2Rem:[1e3,String.raw`(?<commandRem>rem)(?<rem>.*$)`],newLines:[3050,String.raw`(?<newLines>(\r\n|\n|\r)+)`],whiteSpace:[3100,String.raw`(?<whiteSpc>[\t \u00a0]+)`]},r=k.buildRxString([F.numInt,F.numFloat,F.strDQuote,"v2Identifier","v2Label","V2Operator","v2Command","v2Function","newLines","v2Sep","v2Rem","whiteSpace"],t),s={command:"CMD",commandRem:"CMD",func:"FUNC",strDQuote:"STR",label:"LABEL",floatNum:"NUM",intNum:"NUM",identifier:"VAR",identifier2:"VAR",idExtra:"EXTRA",idType:"FUNC",commandSep:"SEP",whiteSpc:"SPC",rem:"REM",other:"OTHER"},n=new be({rxPattern:r,mapper:s,htmlClassPrefix:"editor-style-",PrettifierClass:re});super(n)}getTokensFromMemory(e){const t=ke.getTokensFromMemory(e);this.reset(),t.forEach(r=>{this.addToken(r.key,String(r.value),r.pos)})}tokenizeStr(e){this.tokenizeString(e)}}const v=class v extends ${static stringEncoder(e){if(e.key=="other"&&e.value=="?")return[L.TTC_COMMAND_TOKENS.print];const t={tokens:L.TTC_STRING_TOKENS,normalConverter:w.textToPetscii},{byteArray:r,status:s}=K.convertStringToBytes(e.repr,t);return s!=="OK"&&console.log(s),r}static cmdEncoder(e){return[L.TTC_COMMAND_TOKENS[e.repr]]}static encodeTextAsBytes(e){const t=new Ce;return t.tokenizeString(e),v.encodeTokens(t.tokens)}static encodeTokens(e){let t=2049;const r=[],s={nextAddr:0,line:null,data:[]};function n(){if(s.data.length>0){t+=s.data.length+5,s.nextAddr=t;const o=Object.assign({},s);r.push(o),s.data=[],s.nextAddr=0}}e.forEach(o=>{if(o.category=="LABEL"){n();const p=parseInt(o.value,10);s.line=p;return}const c=v.encoders[o.key]||v.encoders[o.category];if(c){const p=c(o);s.data.push(...p)}}),n();const i=[];return r.forEach(o=>{i.push(o.nextAddr&255,o.nextAddr>>8),i.push(o.line&255,o.line>>8),i.push(...o.data,0)}),i.push(0,0),i}};v.encoders={idType:v.stringEncoder,STR:v.stringEncoder,NUM:v.stringEncoder,VAR:v.stringEncoder,SEP:v.stringEncoder,CMD:v.cmdEncoder,FUNC:v.cmdEncoder,operator:v.cmdEncoder,OTHER:v.stringEncoder};let _e=v;class Ye extends we{constructor(){const e=new te({});super(e)}}const We={Tokenizer:Ce,Prettifier:re,Parser:Ye,Encoder:_e,Decoder:ke,Preprocessor:Se};var Ee=(a=>(a.BASIC_V2="BasicV2",a.BASIC_V2_verbose="BasicV2-verbose",a.GOLFBAS_short="GolfBasic",a.GOLFBAS_verbose="GolfBasic-verbose",a))(Ee||{});const qe={BasicV2:We,GolfBasic:Te,"GolfBasic-verbose":Te};class Ze{constructor(){return this.language="undefined",this.model={},this}usePredefinedLanguage(e){return this.language=e,this.model=qe[e],this}defineLanguage(e){return this.language=e,this}}require.config({paths:{vs:"https://cdn.jsdelivr.net/npm/monaco-editor@0.44.0/min/vs"}});var Oe=Me({target:document.getElementById("tokens"),props:{mode:"table",onClassName:(a,e)=>{if(a[a.length-1]==="bytes")return"column-bytes"},onRenderMenu:(a,e)=>a.filter(t=>t.text!=="text").concat([{...a[0],type:"button",icon:null,text:"variables",title:"variables",onClick:()=>{}}]),onChangeMode:a=>{console.log("mode changed to",a)},mainMenuBar:!0,navigationBar:!1,readOnly:!0}});Oe.update({json:{hello:"world"}});require(["vs/editor/editor.main"],()=>{const a=monaco.editor.create(document.getElementById("editor"),{value:"10 poke 53280, 2",language:"plaintext",theme:"vs-dark",automaticLayout:!0});document.getElementById("tokens");const e=document.getElementById("bytecode"),t=document.getElementById("lang");function r(){const i=a.getValue();t.value,e.textContent=i;const{Encoder:o,Decoder:c,Tokenizer:p,Preprocessor:d}=new Ze().usePredefinedLanguage(Ee.GOLFBAS_verbose).model,x=new d(i);x.useGlobalDirectives();const l=x.getFinalDirectives(),_={},u=new p(_);x.analyzeVarsFromTokenized(u.tokens),u.tokenizeString(i);const M=u.tokens;o.encodeTokens(u.tokens,l);const f=M.map(g=>({key:g.key,category:g.category,value:g.value,pos:u.posToString(g.pos,"L: %ln, C: %col"),bytes:g.byteData&&g.byteData.map(S=>S.toString(16).padStart(2,"0")).join(" ")||" "}));Oe.update({json:f})}let s;function n(){s&&clearTimeout(s),s=window.setTimeout(r,1e3)}a.onDidChangeModelContent(n),r(),t.addEventListener("change",r)});
//# sourceMappingURL=index-Bo3Uv1Xp.js.map
